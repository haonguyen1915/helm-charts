{{- if .Values.cronJobCleanDB.enabled }}
{{- $type := "cron" -}}
{{- $action := "clean-db" -}}
{{- $Name := include "passbolt-library.fullname" . -}}
{{- $fullName := printf "%s-%s-%s" $Name $type $action -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "passbolt-library.labels" . | nindent 4 }}
    {{- include "passbolt-library.typelabels" (dict "action" $action "type" $type) | nindent 4 }}
spec:
  schedule: {{ .Values.cronJobCleanDB.schedule | quote }}
  concurrencyPolicy: {{ .Values.cronJobCleanDB.concurrencyPolicy | default "Replace" }}
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            vault.hashicorp.com/agent-inject: 'true'
            vault.hashicorp.com/agent-inject-secret-config.env: {{ .Values.cronJobCleanDB.vault.path }}
            vault.hashicorp.com/agent-inject-template-config.env: |
              {{`{{ with secret "`}}{{ .Values.cronJobCleanDB.vault.path }}{{`" }}
              {{- range $key, $value := .Data.data }}
              export {{ $key }}={{ $value }}
              {{- end }}
              {{ end }}`}}
            vault.hashicorp.com/agent-pre-populate-only: 'true'
            vault.hashicorp.com/auth-path: auth/{{ .Values.cronJobCleanDB.vault.authPath }}
            vault.hashicorp.com/role: {{ .Values.cronJobCleanDB.vault.role }}
            vault.hashicorp.com/service: {{ .Values.cronJobCleanDB.vault.url }} 
          labels:
           {{- include "passbolt-library.typelabels" (dict "action" $action "type" $type) | nindent 12 }}
           {{- with .Values.cronJobCleanDB.extraPodLabels }}
             {{- toYaml . | nindent 12 }}
           {{- end }}
        spec:
          serviceAccountName: passbolt
          restartPolicy: OnFailure
          containers:
            - name: {{ $fullName }}
              image: 'registry.ftech.ai/is-chart/mysql-client'
              command:
                - "/bin/sh"
                - "-c"
              args:
                - |
                  . /vault/secrets/config.env && \
                  mysql -h${DATASOURCES_DEFAULT_HOST} -u${DATASOURCES_DEFAULT_USERNAME} -p${DATASOURCES_DEFAULT_PASSWORD} passbolt -e 'DELETE FROM action_logs WHERE context="GET /avatars"'
          imagePullSecrets:
          - name: regcred
{{- end -}}